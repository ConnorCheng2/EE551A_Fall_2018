import pytest

from mypkg.my_answers import generateParenthesis


def test_example():
    n = 3
    res = ['((()))', '(()())', '(())()', '()(())', '()()()']
    assert(res == generateParenthesis(n))


def test_case1():
    n = 5
    res
    assert(res == generateParenthesis(n))


def test_case2():
    n = 1
    res = ['()']
    assert(res == generateParenthesis(n))


def test_case3():
    n = 0
    res = ['']
    assert(res == generateParenthesis(n))